{{- if .Values.admission.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ printf "%s-admission-secret-gen" (include "common.names.fullname" .) | trunc 63 | trimSuffix "-" }}
  namespace: {{ .Release.Namespace }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: admission-secret-gen
    {{- if .Values.global.labels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.global.labels "context" $ ) | nindent 4 }}
    {{- end }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "2"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    {{- if .Values.global.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.global.annotations "context" $ ) | nindent 4 }}
    {{- end }}
spec:
  backoffLimit: 3
  template:
    spec:
      restartPolicy: Never
      {{- include "volcano.admissionSecretGen.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ template "volcano.admissionSecretGen.serviceAccountName" . }}
      enableServiceLinks: {{ .Values.global.enableServiceLinks | default false }}
      {{- if .Values.admission.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.admission.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        {{- if .Values.admission.podAffinityPreset }}
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.admission.podAffinityPreset "component" "admission-secret-gen" "context" $) | nindent 10 }}
        {{- end }}
        {{- if .Values.admission.podAntiAffinityPreset }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.admission.podAntiAffinityPreset "component" "admission-secret-gen" "context" $) | nindent 10 }}
        {{- end }}
        {{- if and .Values.admission.nodeAffinityPreset .Values.admission.nodeAffinityPreset.key }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.admission.nodeAffinityPreset.type "key" .Values.admission.nodeAffinityPreset.key "values" .Values.admission.nodeAffinityPreset.values) | nindent 10 }}
        {{- end }}
      {{- end }}
      {{- if .Values.admission.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.admission.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.admission.priorityClassName }}
      priorityClassName: {{ .Values.admission.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.admission.schedulerName }}
      schedulerName: {{ .Values.admission.schedulerName }}
      {{- end }}
      {{- if .Values.admission.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.admission.topologySpreadConstraints "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.admission.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.admission.tolerations "context" $) | nindent 8 }}
      {{- end }}
      containers:
        - name: admission
          image: "{{ .Values.admission.image.registry }}/{{ .Values.admission.image.repository }}:{{ .Values.admission.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ coalesce .Values.admission.image.pullPolicy .Values.global.image.pullPolicy "IfNotPresent" | quote }}
          command:
            - sh
            - -c
          args:
            - |-
              set -eu
              set -o pipefail
              set -o errexit
              set -o nounset
              secret=$(kubectl get secrets -n {{ .Release.Namespace }} | awk '{if ($1=="{{ tpl .Values.admission.config.secretName . }}") print $1}')
              if [ -z "${secret}" ]; then
                ./gen-admission-secret.sh \
                    --service {{ template "volcano.admission.serviceName" . }} \
                    --namespace {{ .Release.Namespace }} \
                    --secret {{ tpl .Values.admission.config.secretName . }}
              fi
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir:
            medium: Memory
            sizeLimit: 64Mi
{{- end }}
